
a4_c_coding.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b2  00800200  0000076a  000007fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000076a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  008003b2  008003b2  000009b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e2  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d75  00000000  00000000  00001b5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007c8  00000000  00000000  000028cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  00003098  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005fd  00000000  00000000  00003260  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007b7  00000000  00000000  0000385d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004014  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6f c0       	rjmp	.+222    	; 0x124 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	76 c0       	rjmp	.+236    	; 0x16e <__vector_32>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e6       	ldi	r30, 0x6A	; 106
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 3b       	cpi	r26, 0xB2	; 178
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a2 eb       	ldi	r26, 0xB2	; 178
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 3b       	cpi	r26, 0xBA	; 186
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	a5 d1       	rcall	.+842    	; 0x46a <main>
 120:	22 c3       	rjmp	.+1604   	; 0x766 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <__vector_17>:
				led_state(LED, 0);
			}else if(count < PWM_PERIOD){
				led_state(LED, 1);
			}else{
				count = 0;
				holds = PWM_PERIOD * (slow_count % 10000) /10000;
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	9f 93       	push	r25
 132:	af 93       	push	r26
 134:	bf 93       	push	r27
 136:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <count>
 13a:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <count+0x1>
 13e:	a0 91 b8 03 	lds	r26, 0x03B8	; 0x8003b8 <count+0x2>
 142:	b0 91 b9 03 	lds	r27, 0x03B9	; 0x8003b9 <count+0x3>
 146:	01 96       	adiw	r24, 0x01	; 1
 148:	a1 1d       	adc	r26, r1
 14a:	b1 1d       	adc	r27, r1
 14c:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <count>
 150:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <count+0x1>
 154:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <count+0x2>
 158:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <count+0x3>
 15c:	bf 91       	pop	r27
 15e:	af 91       	pop	r26
 160:	9f 91       	pop	r25
 162:	8f 91       	pop	r24
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <__vector_32>:
 16e:	1f 92       	push	r1
 170:	0f 92       	push	r0
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	0f 92       	push	r0
 176:	11 24       	eor	r1, r1
 178:	8f 93       	push	r24
 17a:	9f 93       	push	r25
 17c:	af 93       	push	r26
 17e:	bf 93       	push	r27
 180:	80 91 b2 03 	lds	r24, 0x03B2	; 0x8003b2 <__data_end>
 184:	90 91 b3 03 	lds	r25, 0x03B3	; 0x8003b3 <__data_end+0x1>
 188:	a0 91 b4 03 	lds	r26, 0x03B4	; 0x8003b4 <__data_end+0x2>
 18c:	b0 91 b5 03 	lds	r27, 0x03B5	; 0x8003b5 <__data_end+0x3>
 190:	05 96       	adiw	r24, 0x05	; 5
 192:	a1 1d       	adc	r26, r1
 194:	b1 1d       	adc	r27, r1
 196:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <__data_end>
 19a:	90 93 b3 03 	sts	0x03B3, r25	; 0x8003b3 <__data_end+0x1>
 19e:	a0 93 b4 03 	sts	0x03B4, r26	; 0x8003b4 <__data_end+0x2>
 1a2:	b0 93 b5 03 	sts	0x03B5, r27	; 0x8003b5 <__data_end+0x3>
 1a6:	bf 91       	pop	r27
 1a8:	af 91       	pop	r26
 1aa:	9f 91       	pop	r25
 1ac:	8f 91       	pop	r24
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <led_state>:
 1b8:	81 11       	cpse	r24, r1
 1ba:	10 c0       	rjmp	.+32     	; 0x1dc <led_state+0x24>
 1bc:	61 30       	cpi	r22, 0x01	; 1
 1be:	31 f4       	brne	.+12     	; 0x1cc <led_state+0x14>
 1c0:	eb e0       	ldi	r30, 0x0B	; 11
 1c2:	f1 e0       	ldi	r31, 0x01	; 1
 1c4:	80 81       	ld	r24, Z
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	80 83       	st	Z, r24
 1ca:	08 95       	ret
 1cc:	61 11       	cpse	r22, r1
 1ce:	8f c0       	rjmp	.+286    	; 0x2ee <led_state+0x136>
 1d0:	eb e0       	ldi	r30, 0x0B	; 11
 1d2:	f1 e0       	ldi	r31, 0x01	; 1
 1d4:	80 81       	ld	r24, Z
 1d6:	8f 77       	andi	r24, 0x7F	; 127
 1d8:	80 83       	st	Z, r24
 1da:	08 95       	ret
 1dc:	81 30       	cpi	r24, 0x01	; 1
 1de:	81 f4       	brne	.+32     	; 0x200 <led_state+0x48>
 1e0:	61 30       	cpi	r22, 0x01	; 1
 1e2:	31 f4       	brne	.+12     	; 0x1f0 <led_state+0x38>
 1e4:	eb e0       	ldi	r30, 0x0B	; 11
 1e6:	f1 e0       	ldi	r31, 0x01	; 1
 1e8:	80 81       	ld	r24, Z
 1ea:	80 62       	ori	r24, 0x20	; 32
 1ec:	80 83       	st	Z, r24
 1ee:	08 95       	ret
 1f0:	61 11       	cpse	r22, r1
 1f2:	7d c0       	rjmp	.+250    	; 0x2ee <led_state+0x136>
 1f4:	eb e0       	ldi	r30, 0x0B	; 11
 1f6:	f1 e0       	ldi	r31, 0x01	; 1
 1f8:	80 81       	ld	r24, Z
 1fa:	8f 7d       	andi	r24, 0xDF	; 223
 1fc:	80 83       	st	Z, r24
 1fe:	08 95       	ret
 200:	82 30       	cpi	r24, 0x02	; 2
 202:	81 f4       	brne	.+32     	; 0x224 <led_state+0x6c>
 204:	61 30       	cpi	r22, 0x01	; 1
 206:	31 f4       	brne	.+12     	; 0x214 <led_state+0x5c>
 208:	eb e0       	ldi	r30, 0x0B	; 11
 20a:	f1 e0       	ldi	r31, 0x01	; 1
 20c:	80 81       	ld	r24, Z
 20e:	88 60       	ori	r24, 0x08	; 8
 210:	80 83       	st	Z, r24
 212:	08 95       	ret
 214:	61 11       	cpse	r22, r1
 216:	6b c0       	rjmp	.+214    	; 0x2ee <led_state+0x136>
 218:	eb e0       	ldi	r30, 0x0B	; 11
 21a:	f1 e0       	ldi	r31, 0x01	; 1
 21c:	80 81       	ld	r24, Z
 21e:	87 7f       	andi	r24, 0xF7	; 247
 220:	80 83       	st	Z, r24
 222:	08 95       	ret
 224:	83 30       	cpi	r24, 0x03	; 3
 226:	81 f4       	brne	.+32     	; 0x248 <led_state+0x90>
 228:	61 30       	cpi	r22, 0x01	; 1
 22a:	31 f4       	brne	.+12     	; 0x238 <led_state+0x80>
 22c:	eb e0       	ldi	r30, 0x0B	; 11
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	80 81       	ld	r24, Z
 232:	82 60       	ori	r24, 0x02	; 2
 234:	80 83       	st	Z, r24
 236:	08 95       	ret
 238:	61 11       	cpse	r22, r1
 23a:	59 c0       	rjmp	.+178    	; 0x2ee <led_state+0x136>
 23c:	eb e0       	ldi	r30, 0x0B	; 11
 23e:	f1 e0       	ldi	r31, 0x01	; 1
 240:	80 81       	ld	r24, Z
 242:	8d 7f       	andi	r24, 0xFD	; 253
 244:	80 83       	st	Z, r24
 246:	08 95       	ret
 248:	8f 30       	cpi	r24, 0x0F	; 15
 24a:	11 f5       	brne	.+68     	; 0x290 <led_state+0xd8>
 24c:	6f 30       	cpi	r22, 0x0F	; 15
 24e:	79 f4       	brne	.+30     	; 0x26e <led_state+0xb6>
 250:	eb e0       	ldi	r30, 0x0B	; 11
 252:	f1 e0       	ldi	r31, 0x01	; 1
 254:	80 81       	ld	r24, Z
 256:	80 68       	ori	r24, 0x80	; 128
 258:	80 83       	st	Z, r24
 25a:	80 81       	ld	r24, Z
 25c:	80 62       	ori	r24, 0x20	; 32
 25e:	80 83       	st	Z, r24
 260:	80 81       	ld	r24, Z
 262:	88 60       	ori	r24, 0x08	; 8
 264:	80 83       	st	Z, r24
 266:	80 81       	ld	r24, Z
 268:	82 60       	ori	r24, 0x02	; 2
 26a:	80 83       	st	Z, r24
 26c:	08 95       	ret
 26e:	61 11       	cpse	r22, r1
 270:	3e c0       	rjmp	.+124    	; 0x2ee <led_state+0x136>
 272:	eb e0       	ldi	r30, 0x0B	; 11
 274:	f1 e0       	ldi	r31, 0x01	; 1
 276:	80 81       	ld	r24, Z
 278:	8f 77       	andi	r24, 0x7F	; 127
 27a:	80 83       	st	Z, r24
 27c:	80 81       	ld	r24, Z
 27e:	8f 7d       	andi	r24, 0xDF	; 223
 280:	80 83       	st	Z, r24
 282:	80 81       	ld	r24, Z
 284:	87 7f       	andi	r24, 0xF7	; 247
 286:	80 83       	st	Z, r24
 288:	80 81       	ld	r24, Z
 28a:	8d 7f       	andi	r24, 0xFD	; 253
 28c:	80 83       	st	Z, r24
 28e:	08 95       	ret
 290:	83 32       	cpi	r24, 0x23	; 35
 292:	b1 f4       	brne	.+44     	; 0x2c0 <led_state+0x108>
 294:	61 11       	cpse	r22, r1
 296:	09 c0       	rjmp	.+18     	; 0x2aa <led_state+0xf2>
 298:	eb e0       	ldi	r30, 0x0B	; 11
 29a:	f1 e0       	ldi	r31, 0x01	; 1
 29c:	80 81       	ld	r24, Z
 29e:	87 7f       	andi	r24, 0xF7	; 247
 2a0:	80 83       	st	Z, r24
 2a2:	80 81       	ld	r24, Z
 2a4:	8f 7d       	andi	r24, 0xDF	; 223
 2a6:	80 83       	st	Z, r24
 2a8:	08 95       	ret
 2aa:	61 30       	cpi	r22, 0x01	; 1
 2ac:	01 f5       	brne	.+64     	; 0x2ee <led_state+0x136>
 2ae:	eb e0       	ldi	r30, 0x0B	; 11
 2b0:	f1 e0       	ldi	r31, 0x01	; 1
 2b2:	80 81       	ld	r24, Z
 2b4:	88 60       	ori	r24, 0x08	; 8
 2b6:	80 83       	st	Z, r24
 2b8:	80 81       	ld	r24, Z
 2ba:	80 62       	ori	r24, 0x20	; 32
 2bc:	80 83       	st	Z, r24
 2be:	08 95       	ret
 2c0:	84 31       	cpi	r24, 0x14	; 20
 2c2:	a9 f4       	brne	.+42     	; 0x2ee <led_state+0x136>
 2c4:	61 30       	cpi	r22, 0x01	; 1
 2c6:	49 f4       	brne	.+18     	; 0x2da <led_state+0x122>
 2c8:	eb e0       	ldi	r30, 0x0B	; 11
 2ca:	f1 e0       	ldi	r31, 0x01	; 1
 2cc:	80 81       	ld	r24, Z
 2ce:	80 68       	ori	r24, 0x80	; 128
 2d0:	80 83       	st	Z, r24
 2d2:	80 81       	ld	r24, Z
 2d4:	82 60       	ori	r24, 0x02	; 2
 2d6:	80 83       	st	Z, r24
 2d8:	08 95       	ret
 2da:	61 11       	cpse	r22, r1
 2dc:	08 c0       	rjmp	.+16     	; 0x2ee <led_state+0x136>
 2de:	eb e0       	ldi	r30, 0x0B	; 11
 2e0:	f1 e0       	ldi	r31, 0x01	; 1
 2e2:	80 81       	ld	r24, Z
 2e4:	8f 77       	andi	r24, 0x7F	; 127
 2e6:	80 83       	st	Z, r24
 2e8:	80 81       	ld	r24, Z
 2ea:	8d 7f       	andi	r24, 0xFD	; 253
 2ec:	80 83       	st	Z, r24
 2ee:	08 95       	ret

000002f0 <light_show>:
		}
	}
}


void light_show() {
 2f0:	2f 92       	push	r2
 2f2:	3f 92       	push	r3
 2f4:	4f 92       	push	r4
 2f6:	5f 92       	push	r5
 2f8:	6f 92       	push	r6
 2fa:	7f 92       	push	r7
 2fc:	8f 92       	push	r8
 2fe:	9f 92       	push	r9
 300:	af 92       	push	r10
 302:	bf 92       	push	r11
 304:	cf 92       	push	r12
 306:	df 92       	push	r13
 308:	ef 92       	push	r14
 30a:	ff 92       	push	r15
 30c:	0f 93       	push	r16
 30e:	1f 93       	push	r17
 310:	cf 93       	push	r28
 312:	df 93       	push	r29
 314:	cd b7       	in	r28, 0x3d	; 61
 316:	de b7       	in	r29, 0x3e	; 62
 318:	ca 56       	subi	r28, 0x6A	; 106
 31a:	d1 40       	sbci	r29, 0x01	; 1
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	f8 94       	cli
 320:	de bf       	out	0x3e, r29	; 62
 322:	0f be       	out	0x3f, r0	; 63
 324:	cd bf       	out	0x3d, r28	; 61
	int led_number[] = {
 326:	88 e7       	ldi	r24, 0x78	; 120
 328:	ec e4       	ldi	r30, 0x4C	; 76
 32a:	f2 e0       	ldi	r31, 0x02	; 2
 32c:	de 01       	movw	r26, r28
 32e:	11 96       	adiw	r26, 0x01	; 1
 330:	01 90       	ld	r0, Z+
 332:	0d 92       	st	X+, r0
 334:	8a 95       	dec	r24
 336:	e1 f7       	brne	.-8      	; 0x330 <light_show+0x40>
		0, 0, 1, 1, 2, 2, 3, 3,
		0xf, 0xf, 0xf, 0xf,
		0x23, 0x23,0x23, 0x23,
	};
	
	int on_off[] = {
 338:	88 e7       	ldi	r24, 0x78	; 120
 33a:	e4 ec       	ldi	r30, 0xC4	; 196
 33c:	f2 e0       	ldi	r31, 0x02	; 2
 33e:	de 01       	movw	r26, r28
 340:	a7 58       	subi	r26, 0x87	; 135
 342:	bf 4f       	sbci	r27, 0xFF	; 255
 344:	01 90       	ld	r0, Z+
 346:	0d 92       	st	X+, r0
 348:	8a 95       	dec	r24
 34a:	e1 f7       	brne	.-8      	; 0x344 <light_show+0x54>
		1, 0, 1, 0, 1, 0, 1, 0,
		0xf,0, 0xf, 0, 
		1, 0, 1, 0,
	};
	
	int delay_time[] = {
 34c:	86 e7       	ldi	r24, 0x76	; 118
 34e:	ec e3       	ldi	r30, 0x3C	; 60
 350:	f3 e0       	ldi	r31, 0x03	; 3
 352:	de 01       	movw	r26, r28
 354:	af 50       	subi	r26, 0x0F	; 15
 356:	bf 4f       	sbci	r27, 0xFF	; 255
 358:	01 90       	ld	r0, Z+
 35a:	0d 92       	st	X+, r0
 35c:	8a 95       	dec	r24
 35e:	e1 f7       	brne	.-8      	; 0x358 <light_show+0x68>
 360:	8e 01       	movw	r16, r28
 362:	07 58       	subi	r16, 0x87	; 135
 364:	1f 4f       	sbci	r17, 0xFF	; 255
 366:	ce 01       	movw	r24, r28
 368:	01 96       	adiw	r24, 0x01	; 1
 36a:	5c 01       	movw	r10, r24
 36c:	fe 01       	movw	r30, r28
 36e:	ef 50       	subi	r30, 0x0F	; 15
 370:	ff 4f       	sbci	r31, 0xFF	; 255
 372:	1f 01       	movw	r2, r30
 374:	4f 01       	movw	r8, r30

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 376:	44 24       	eor	r4, r4
 378:	43 94       	inc	r4
 37a:	51 2c       	mov	r5, r1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 37c:	0f 2e       	mov	r0, r31
 37e:	f0 e9       	ldi	r31, 0x90	; 144
 380:	6f 2e       	mov	r6, r31
 382:	77 24       	eor	r7, r7
 384:	73 94       	inc	r7
 386:	f0 2d       	mov	r31, r0
		150,150,150,150, 150, 150, 150, 150
	};

	int length = 60;
	for(int i = 0; i < length; i++){
		led_state(led_number[i], on_off[i]);
 388:	f8 01       	movw	r30, r16
 38a:	60 81       	ld	r22, Z
 38c:	0e 5f       	subi	r16, 0xFE	; 254
 38e:	1f 4f       	sbci	r17, 0xFF	; 255
 390:	f5 01       	movw	r30, r10
 392:	80 81       	ld	r24, Z
 394:	f2 e0       	ldi	r31, 0x02	; 2
 396:	af 0e       	add	r10, r31
 398:	b1 1c       	adc	r11, r1
 39a:	0e df       	rcall	.-484    	; 0x1b8 <led_state>
		_delay_ms(delay_time[i]);
 39c:	f1 01       	movw	r30, r2
 39e:	61 91       	ld	r22, Z+
 3a0:	71 91       	ld	r23, Z+
 3a2:	1f 01       	movw	r2, r30
 3a4:	07 2e       	mov	r0, r23
 3a6:	00 0c       	add	r0, r0
 3a8:	88 0b       	sbc	r24, r24
 3aa:	99 0b       	sbc	r25, r25
 3ac:	c5 d0       	rcall	.+394    	; 0x538 <__floatsisf>
 3ae:	c9 59       	subi	r28, 0x99	; 153
 3b0:	de 4f       	sbci	r29, 0xFE	; 254
 3b2:	68 83       	st	Y, r22
 3b4:	79 83       	std	Y+1, r23	; 0x01
 3b6:	8a 83       	std	Y+2, r24	; 0x02
 3b8:	9b 83       	std	Y+3, r25	; 0x03
 3ba:	c7 56       	subi	r28, 0x67	; 103
 3bc:	d1 40       	sbci	r29, 0x01	; 1

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 3be:	20 e0       	ldi	r18, 0x00	; 0
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	4a e7       	ldi	r20, 0x7A	; 122
 3c4:	55 e4       	ldi	r21, 0x45	; 69
 3c6:	44 d1       	rcall	.+648    	; 0x650 <__mulsf3>
 3c8:	6b 01       	movw	r12, r22
 3ca:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
 3cc:	20 e0       	ldi	r18, 0x00	; 0
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	40 e8       	ldi	r20, 0x80	; 128
 3d2:	5f e3       	ldi	r21, 0x3F	; 63
 3d4:	7f d0       	rcall	.+254    	; 0x4d4 <__cmpsf2>
 3d6:	88 23       	and	r24, r24
 3d8:	2c f1       	brlt	.+74     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
		__ticks = 1;
	else if (__tmp > 65535)
 3da:	20 e0       	ldi	r18, 0x00	; 0
 3dc:	3f ef       	ldi	r19, 0xFF	; 255
 3de:	4f e7       	ldi	r20, 0x7F	; 127
 3e0:	57 e4       	ldi	r21, 0x47	; 71
 3e2:	c7 01       	movw	r24, r14
 3e4:	b6 01       	movw	r22, r12
 3e6:	30 d1       	rcall	.+608    	; 0x648 <__gesf2>
 3e8:	18 16       	cp	r1, r24
 3ea:	c4 f4       	brge	.+48     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 3ec:	20 e0       	ldi	r18, 0x00	; 0
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	40 e2       	ldi	r20, 0x20	; 32
 3f2:	51 e4       	ldi	r21, 0x41	; 65
 3f4:	c9 59       	subi	r28, 0x99	; 153
 3f6:	de 4f       	sbci	r29, 0xFE	; 254
 3f8:	68 81       	ld	r22, Y
 3fa:	79 81       	ldd	r23, Y+1	; 0x01
 3fc:	8a 81       	ldd	r24, Y+2	; 0x02
 3fe:	9b 81       	ldd	r25, Y+3	; 0x03
 400:	c7 56       	subi	r28, 0x67	; 103
 402:	d1 40       	sbci	r29, 0x01	; 1
 404:	25 d1       	rcall	.+586    	; 0x650 <__mulsf3>
 406:	6a d0       	rcall	.+212    	; 0x4dc <__fixunssfsi>
		while(__ticks)
 408:	61 15       	cp	r22, r1
 40a:	71 05       	cpc	r23, r1
 40c:	81 f0       	breq	.+32     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 40e:	c3 01       	movw	r24, r6
 410:	01 97       	sbiw	r24, 0x01	; 1
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 412:	f1 f7       	brne	.-4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 414:	61 50       	subi	r22, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 416:	71 09       	sbc	r23, r1
 418:	d1 f7       	brne	.-12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 41a:	09 c0       	rjmp	.+18     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 41c:	c7 01       	movw	r24, r14
 41e:	b6 01       	movw	r22, r12
 420:	5d d0       	rcall	.+186    	; 0x4dc <__fixunssfsi>
 422:	02 c0       	rjmp	.+4      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 424:	64 2d       	mov	r22, r4
 426:	75 2d       	mov	r23, r5
 428:	cb 01       	movw	r24, r22
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	f1 f7       	brne	.-4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
		150, 150, 150, 150, 150, 150, 150, 150,
		150,150,150,150, 150, 150, 150, 150
	};

	int length = 60;
	for(int i = 0; i < length; i++){
 42e:	08 15       	cp	r16, r8
 430:	19 05       	cpc	r17, r9
 432:	09 f0       	breq	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	a9 cf       	rjmp	.-174    	; 0x388 <light_show+0x98>
		led_state(led_number[i], on_off[i]);
		_delay_ms(delay_time[i]);
	}
}
 436:	c6 59       	subi	r28, 0x96	; 150
 438:	de 4f       	sbci	r29, 0xFE	; 254
 43a:	0f b6       	in	r0, 0x3f	; 63
 43c:	f8 94       	cli
 43e:	de bf       	out	0x3e, r29	; 62
 440:	0f be       	out	0x3f, r0	; 63
 442:	cd bf       	out	0x3d, r28	; 61
 444:	df 91       	pop	r29
 446:	cf 91       	pop	r28
 448:	1f 91       	pop	r17
 44a:	0f 91       	pop	r16
 44c:	ff 90       	pop	r15
 44e:	ef 90       	pop	r14
 450:	df 90       	pop	r13
 452:	cf 90       	pop	r12
 454:	bf 90       	pop	r11
 456:	af 90       	pop	r10
 458:	9f 90       	pop	r9
 45a:	8f 90       	pop	r8
 45c:	7f 90       	pop	r7
 45e:	6f 90       	pop	r6
 460:	5f 90       	pop	r5
 462:	4f 90       	pop	r4
 464:	3f 90       	pop	r3
 466:	2f 90       	pop	r2
 468:	08 95       	ret

0000046a <main>:
 */

int main() {
    /* Turn off global interrupts while setting up timers. */

	cli();
 46a:	f8 94       	cli

	/* Set up timer 1, i.e., an interrupt every 1 microsecond. */
	OCR1A = TOP1;
 46c:	82 e0       	ldi	r24, 0x02	; 2
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 474:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	TCCR1A = 0;
 478:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
	TCCR1B = 0;
 47c:	e1 e8       	ldi	r30, 0x81	; 129
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	10 82       	st	Z, r1
	TCCR1B |= (1 << WGM12);
 482:	80 81       	ld	r24, Z
 484:	88 60       	ori	r24, 0x08	; 8
 486:	80 83       	st	Z, r24
    /* Next two lines provide a prescaler value of 8. */
	TCCR1B |= (1 << CS11);
 488:	80 81       	ld	r24, Z
 48a:	82 60       	ori	r24, 0x02	; 2
 48c:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS10);
 48e:	80 81       	ld	r24, Z
 490:	81 60       	ori	r24, 0x01	; 1
 492:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1A);
 494:	ef e6       	ldi	r30, 0x6F	; 111
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	82 60       	ori	r24, 0x02	; 2
 49c:	80 83       	st	Z, r24

	/* Set up timer 3, i.e., an interrupt every 10 milliseconds. */
	OCR3A = TOP3;
 49e:	84 ec       	ldi	r24, 0xC4	; 196
 4a0:	99 e0       	ldi	r25, 0x09	; 9
 4a2:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 4a6:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	TCCR3A = 0;
 4aa:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
	TCCR3B = 0;
 4ae:	e1 e9       	ldi	r30, 0x91	; 145
 4b0:	f0 e0       	ldi	r31, 0x00	; 0
 4b2:	10 82       	st	Z, r1
	TCCR3B |= (1 << WGM32);
 4b4:	80 81       	ld	r24, Z
 4b6:	88 60       	ori	r24, 0x08	; 8
 4b8:	80 83       	st	Z, r24
    /* Next line provides a prescaler value of 64. */
	TCCR3B |= (1 << CS31);
 4ba:	80 81       	ld	r24, Z
 4bc:	82 60       	ori	r24, 0x02	; 2
 4be:	80 83       	st	Z, r24
	TIMSK3 |= (1 << OCIE3A);
 4c0:	e1 e7       	ldi	r30, 0x71	; 113
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	80 81       	ld	r24, Z
 4c6:	82 60       	ori	r24, 0x02	; 2
 4c8:	80 83       	st	Z, r24


	/* Turn on global interrupts */
	sei();
 4ca:	78 94       	sei
 


 //This code could be used to test your work for the bonus part.

	light_show();
 4cc:	11 df       	rcall	.-478    	; 0x2f0 <light_show>

/* ****************************************************
 * **** END OF SECOND "STUDENT CODE" SECTION **********
 * ****************************************************
 */
}
 4ce:	80 e0       	ldi	r24, 0x00	; 0
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	08 95       	ret

000004d4 <__cmpsf2>:
 4d4:	6c d0       	rcall	.+216    	; 0x5ae <__fp_cmp>
 4d6:	08 f4       	brcc	.+2      	; 0x4da <__cmpsf2+0x6>
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	08 95       	ret

000004dc <__fixunssfsi>:
 4dc:	94 d0       	rcall	.+296    	; 0x606 <__fp_splitA>
 4de:	88 f0       	brcs	.+34     	; 0x502 <__fixunssfsi+0x26>
 4e0:	9f 57       	subi	r25, 0x7F	; 127
 4e2:	90 f0       	brcs	.+36     	; 0x508 <__fixunssfsi+0x2c>
 4e4:	b9 2f       	mov	r27, r25
 4e6:	99 27       	eor	r25, r25
 4e8:	b7 51       	subi	r27, 0x17	; 23
 4ea:	a0 f0       	brcs	.+40     	; 0x514 <__fixunssfsi+0x38>
 4ec:	d1 f0       	breq	.+52     	; 0x522 <__fixunssfsi+0x46>
 4ee:	66 0f       	add	r22, r22
 4f0:	77 1f       	adc	r23, r23
 4f2:	88 1f       	adc	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	1a f0       	brmi	.+6      	; 0x4fe <__fixunssfsi+0x22>
 4f8:	ba 95       	dec	r27
 4fa:	c9 f7       	brne	.-14     	; 0x4ee <__fixunssfsi+0x12>
 4fc:	12 c0       	rjmp	.+36     	; 0x522 <__fixunssfsi+0x46>
 4fe:	b1 30       	cpi	r27, 0x01	; 1
 500:	81 f0       	breq	.+32     	; 0x522 <__fixunssfsi+0x46>
 502:	9b d0       	rcall	.+310    	; 0x63a <__fp_zero>
 504:	b1 e0       	ldi	r27, 0x01	; 1
 506:	08 95       	ret
 508:	98 c0       	rjmp	.+304    	; 0x63a <__fp_zero>
 50a:	67 2f       	mov	r22, r23
 50c:	78 2f       	mov	r23, r24
 50e:	88 27       	eor	r24, r24
 510:	b8 5f       	subi	r27, 0xF8	; 248
 512:	39 f0       	breq	.+14     	; 0x522 <__fixunssfsi+0x46>
 514:	b9 3f       	cpi	r27, 0xF9	; 249
 516:	cc f3       	brlt	.-14     	; 0x50a <__fixunssfsi+0x2e>
 518:	86 95       	lsr	r24
 51a:	77 95       	ror	r23
 51c:	67 95       	ror	r22
 51e:	b3 95       	inc	r27
 520:	d9 f7       	brne	.-10     	; 0x518 <__fixunssfsi+0x3c>
 522:	3e f4       	brtc	.+14     	; 0x532 <__fixunssfsi+0x56>
 524:	90 95       	com	r25
 526:	80 95       	com	r24
 528:	70 95       	com	r23
 52a:	61 95       	neg	r22
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	08 95       	ret

00000534 <__floatunsisf>:
 534:	e8 94       	clt
 536:	09 c0       	rjmp	.+18     	; 0x54a <__floatsisf+0x12>

00000538 <__floatsisf>:
 538:	97 fb       	bst	r25, 7
 53a:	3e f4       	brtc	.+14     	; 0x54a <__floatsisf+0x12>
 53c:	90 95       	com	r25
 53e:	80 95       	com	r24
 540:	70 95       	com	r23
 542:	61 95       	neg	r22
 544:	7f 4f       	sbci	r23, 0xFF	; 255
 546:	8f 4f       	sbci	r24, 0xFF	; 255
 548:	9f 4f       	sbci	r25, 0xFF	; 255
 54a:	99 23       	and	r25, r25
 54c:	a9 f0       	breq	.+42     	; 0x578 <__floatsisf+0x40>
 54e:	f9 2f       	mov	r31, r25
 550:	96 e9       	ldi	r25, 0x96	; 150
 552:	bb 27       	eor	r27, r27
 554:	93 95       	inc	r25
 556:	f6 95       	lsr	r31
 558:	87 95       	ror	r24
 55a:	77 95       	ror	r23
 55c:	67 95       	ror	r22
 55e:	b7 95       	ror	r27
 560:	f1 11       	cpse	r31, r1
 562:	f8 cf       	rjmp	.-16     	; 0x554 <__floatsisf+0x1c>
 564:	fa f4       	brpl	.+62     	; 0x5a4 <__floatsisf+0x6c>
 566:	bb 0f       	add	r27, r27
 568:	11 f4       	brne	.+4      	; 0x56e <__floatsisf+0x36>
 56a:	60 ff       	sbrs	r22, 0
 56c:	1b c0       	rjmp	.+54     	; 0x5a4 <__floatsisf+0x6c>
 56e:	6f 5f       	subi	r22, 0xFF	; 255
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	16 c0       	rjmp	.+44     	; 0x5a4 <__floatsisf+0x6c>
 578:	88 23       	and	r24, r24
 57a:	11 f0       	breq	.+4      	; 0x580 <__floatsisf+0x48>
 57c:	96 e9       	ldi	r25, 0x96	; 150
 57e:	11 c0       	rjmp	.+34     	; 0x5a2 <__floatsisf+0x6a>
 580:	77 23       	and	r23, r23
 582:	21 f0       	breq	.+8      	; 0x58c <__floatsisf+0x54>
 584:	9e e8       	ldi	r25, 0x8E	; 142
 586:	87 2f       	mov	r24, r23
 588:	76 2f       	mov	r23, r22
 58a:	05 c0       	rjmp	.+10     	; 0x596 <__floatsisf+0x5e>
 58c:	66 23       	and	r22, r22
 58e:	71 f0       	breq	.+28     	; 0x5ac <__floatsisf+0x74>
 590:	96 e8       	ldi	r25, 0x86	; 134
 592:	86 2f       	mov	r24, r22
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	2a f0       	brmi	.+10     	; 0x5a4 <__floatsisf+0x6c>
 59a:	9a 95       	dec	r25
 59c:	66 0f       	add	r22, r22
 59e:	77 1f       	adc	r23, r23
 5a0:	88 1f       	adc	r24, r24
 5a2:	da f7       	brpl	.-10     	; 0x59a <__floatsisf+0x62>
 5a4:	88 0f       	add	r24, r24
 5a6:	96 95       	lsr	r25
 5a8:	87 95       	ror	r24
 5aa:	97 f9       	bld	r25, 7
 5ac:	08 95       	ret

000005ae <__fp_cmp>:
 5ae:	99 0f       	add	r25, r25
 5b0:	00 08       	sbc	r0, r0
 5b2:	55 0f       	add	r21, r21
 5b4:	aa 0b       	sbc	r26, r26
 5b6:	e0 e8       	ldi	r30, 0x80	; 128
 5b8:	fe ef       	ldi	r31, 0xFE	; 254
 5ba:	16 16       	cp	r1, r22
 5bc:	17 06       	cpc	r1, r23
 5be:	e8 07       	cpc	r30, r24
 5c0:	f9 07       	cpc	r31, r25
 5c2:	c0 f0       	brcs	.+48     	; 0x5f4 <__fp_cmp+0x46>
 5c4:	12 16       	cp	r1, r18
 5c6:	13 06       	cpc	r1, r19
 5c8:	e4 07       	cpc	r30, r20
 5ca:	f5 07       	cpc	r31, r21
 5cc:	98 f0       	brcs	.+38     	; 0x5f4 <__fp_cmp+0x46>
 5ce:	62 1b       	sub	r22, r18
 5d0:	73 0b       	sbc	r23, r19
 5d2:	84 0b       	sbc	r24, r20
 5d4:	95 0b       	sbc	r25, r21
 5d6:	39 f4       	brne	.+14     	; 0x5e6 <__fp_cmp+0x38>
 5d8:	0a 26       	eor	r0, r26
 5da:	61 f0       	breq	.+24     	; 0x5f4 <__fp_cmp+0x46>
 5dc:	23 2b       	or	r18, r19
 5de:	24 2b       	or	r18, r20
 5e0:	25 2b       	or	r18, r21
 5e2:	21 f4       	brne	.+8      	; 0x5ec <__fp_cmp+0x3e>
 5e4:	08 95       	ret
 5e6:	0a 26       	eor	r0, r26
 5e8:	09 f4       	brne	.+2      	; 0x5ec <__fp_cmp+0x3e>
 5ea:	a1 40       	sbci	r26, 0x01	; 1
 5ec:	a6 95       	lsr	r26
 5ee:	8f ef       	ldi	r24, 0xFF	; 255
 5f0:	81 1d       	adc	r24, r1
 5f2:	81 1d       	adc	r24, r1
 5f4:	08 95       	ret

000005f6 <__fp_split3>:
 5f6:	57 fd       	sbrc	r21, 7
 5f8:	90 58       	subi	r25, 0x80	; 128
 5fa:	44 0f       	add	r20, r20
 5fc:	55 1f       	adc	r21, r21
 5fe:	59 f0       	breq	.+22     	; 0x616 <__fp_splitA+0x10>
 600:	5f 3f       	cpi	r21, 0xFF	; 255
 602:	71 f0       	breq	.+28     	; 0x620 <__fp_splitA+0x1a>
 604:	47 95       	ror	r20

00000606 <__fp_splitA>:
 606:	88 0f       	add	r24, r24
 608:	97 fb       	bst	r25, 7
 60a:	99 1f       	adc	r25, r25
 60c:	61 f0       	breq	.+24     	; 0x626 <__fp_splitA+0x20>
 60e:	9f 3f       	cpi	r25, 0xFF	; 255
 610:	79 f0       	breq	.+30     	; 0x630 <__fp_splitA+0x2a>
 612:	87 95       	ror	r24
 614:	08 95       	ret
 616:	12 16       	cp	r1, r18
 618:	13 06       	cpc	r1, r19
 61a:	14 06       	cpc	r1, r20
 61c:	55 1f       	adc	r21, r21
 61e:	f2 cf       	rjmp	.-28     	; 0x604 <__fp_split3+0xe>
 620:	46 95       	lsr	r20
 622:	f1 df       	rcall	.-30     	; 0x606 <__fp_splitA>
 624:	08 c0       	rjmp	.+16     	; 0x636 <__fp_splitA+0x30>
 626:	16 16       	cp	r1, r22
 628:	17 06       	cpc	r1, r23
 62a:	18 06       	cpc	r1, r24
 62c:	99 1f       	adc	r25, r25
 62e:	f1 cf       	rjmp	.-30     	; 0x612 <__fp_splitA+0xc>
 630:	86 95       	lsr	r24
 632:	71 05       	cpc	r23, r1
 634:	61 05       	cpc	r22, r1
 636:	08 94       	sec
 638:	08 95       	ret

0000063a <__fp_zero>:
 63a:	e8 94       	clt

0000063c <__fp_szero>:
 63c:	bb 27       	eor	r27, r27
 63e:	66 27       	eor	r22, r22
 640:	77 27       	eor	r23, r23
 642:	cb 01       	movw	r24, r22
 644:	97 f9       	bld	r25, 7
 646:	08 95       	ret

00000648 <__gesf2>:
 648:	b2 df       	rcall	.-156    	; 0x5ae <__fp_cmp>
 64a:	08 f4       	brcc	.+2      	; 0x64e <__gesf2+0x6>
 64c:	8f ef       	ldi	r24, 0xFF	; 255
 64e:	08 95       	ret

00000650 <__mulsf3>:
 650:	0b d0       	rcall	.+22     	; 0x668 <__mulsf3x>
 652:	78 c0       	rjmp	.+240    	; 0x744 <__fp_round>
 654:	69 d0       	rcall	.+210    	; 0x728 <__fp_pscA>
 656:	28 f0       	brcs	.+10     	; 0x662 <__mulsf3+0x12>
 658:	6e d0       	rcall	.+220    	; 0x736 <__fp_pscB>
 65a:	18 f0       	brcs	.+6      	; 0x662 <__mulsf3+0x12>
 65c:	95 23       	and	r25, r21
 65e:	09 f0       	breq	.+2      	; 0x662 <__mulsf3+0x12>
 660:	5a c0       	rjmp	.+180    	; 0x716 <__fp_inf>
 662:	5f c0       	rjmp	.+190    	; 0x722 <__fp_nan>
 664:	11 24       	eor	r1, r1
 666:	ea cf       	rjmp	.-44     	; 0x63c <__fp_szero>

00000668 <__mulsf3x>:
 668:	c6 df       	rcall	.-116    	; 0x5f6 <__fp_split3>
 66a:	a0 f3       	brcs	.-24     	; 0x654 <__mulsf3+0x4>

0000066c <__mulsf3_pse>:
 66c:	95 9f       	mul	r25, r21
 66e:	d1 f3       	breq	.-12     	; 0x664 <__mulsf3+0x14>
 670:	95 0f       	add	r25, r21
 672:	50 e0       	ldi	r21, 0x00	; 0
 674:	55 1f       	adc	r21, r21
 676:	62 9f       	mul	r22, r18
 678:	f0 01       	movw	r30, r0
 67a:	72 9f       	mul	r23, r18
 67c:	bb 27       	eor	r27, r27
 67e:	f0 0d       	add	r31, r0
 680:	b1 1d       	adc	r27, r1
 682:	63 9f       	mul	r22, r19
 684:	aa 27       	eor	r26, r26
 686:	f0 0d       	add	r31, r0
 688:	b1 1d       	adc	r27, r1
 68a:	aa 1f       	adc	r26, r26
 68c:	64 9f       	mul	r22, r20
 68e:	66 27       	eor	r22, r22
 690:	b0 0d       	add	r27, r0
 692:	a1 1d       	adc	r26, r1
 694:	66 1f       	adc	r22, r22
 696:	82 9f       	mul	r24, r18
 698:	22 27       	eor	r18, r18
 69a:	b0 0d       	add	r27, r0
 69c:	a1 1d       	adc	r26, r1
 69e:	62 1f       	adc	r22, r18
 6a0:	73 9f       	mul	r23, r19
 6a2:	b0 0d       	add	r27, r0
 6a4:	a1 1d       	adc	r26, r1
 6a6:	62 1f       	adc	r22, r18
 6a8:	83 9f       	mul	r24, r19
 6aa:	a0 0d       	add	r26, r0
 6ac:	61 1d       	adc	r22, r1
 6ae:	22 1f       	adc	r18, r18
 6b0:	74 9f       	mul	r23, r20
 6b2:	33 27       	eor	r19, r19
 6b4:	a0 0d       	add	r26, r0
 6b6:	61 1d       	adc	r22, r1
 6b8:	23 1f       	adc	r18, r19
 6ba:	84 9f       	mul	r24, r20
 6bc:	60 0d       	add	r22, r0
 6be:	21 1d       	adc	r18, r1
 6c0:	82 2f       	mov	r24, r18
 6c2:	76 2f       	mov	r23, r22
 6c4:	6a 2f       	mov	r22, r26
 6c6:	11 24       	eor	r1, r1
 6c8:	9f 57       	subi	r25, 0x7F	; 127
 6ca:	50 40       	sbci	r21, 0x00	; 0
 6cc:	8a f0       	brmi	.+34     	; 0x6f0 <__mulsf3_pse+0x84>
 6ce:	e1 f0       	breq	.+56     	; 0x708 <__mulsf3_pse+0x9c>
 6d0:	88 23       	and	r24, r24
 6d2:	4a f0       	brmi	.+18     	; 0x6e6 <__mulsf3_pse+0x7a>
 6d4:	ee 0f       	add	r30, r30
 6d6:	ff 1f       	adc	r31, r31
 6d8:	bb 1f       	adc	r27, r27
 6da:	66 1f       	adc	r22, r22
 6dc:	77 1f       	adc	r23, r23
 6de:	88 1f       	adc	r24, r24
 6e0:	91 50       	subi	r25, 0x01	; 1
 6e2:	50 40       	sbci	r21, 0x00	; 0
 6e4:	a9 f7       	brne	.-22     	; 0x6d0 <__mulsf3_pse+0x64>
 6e6:	9e 3f       	cpi	r25, 0xFE	; 254
 6e8:	51 05       	cpc	r21, r1
 6ea:	70 f0       	brcs	.+28     	; 0x708 <__mulsf3_pse+0x9c>
 6ec:	14 c0       	rjmp	.+40     	; 0x716 <__fp_inf>
 6ee:	a6 cf       	rjmp	.-180    	; 0x63c <__fp_szero>
 6f0:	5f 3f       	cpi	r21, 0xFF	; 255
 6f2:	ec f3       	brlt	.-6      	; 0x6ee <__mulsf3_pse+0x82>
 6f4:	98 3e       	cpi	r25, 0xE8	; 232
 6f6:	dc f3       	brlt	.-10     	; 0x6ee <__mulsf3_pse+0x82>
 6f8:	86 95       	lsr	r24
 6fa:	77 95       	ror	r23
 6fc:	67 95       	ror	r22
 6fe:	b7 95       	ror	r27
 700:	f7 95       	ror	r31
 702:	e7 95       	ror	r30
 704:	9f 5f       	subi	r25, 0xFF	; 255
 706:	c1 f7       	brne	.-16     	; 0x6f8 <__mulsf3_pse+0x8c>
 708:	fe 2b       	or	r31, r30
 70a:	88 0f       	add	r24, r24
 70c:	91 1d       	adc	r25, r1
 70e:	96 95       	lsr	r25
 710:	87 95       	ror	r24
 712:	97 f9       	bld	r25, 7
 714:	08 95       	ret

00000716 <__fp_inf>:
 716:	97 f9       	bld	r25, 7
 718:	9f 67       	ori	r25, 0x7F	; 127
 71a:	80 e8       	ldi	r24, 0x80	; 128
 71c:	70 e0       	ldi	r23, 0x00	; 0
 71e:	60 e0       	ldi	r22, 0x00	; 0
 720:	08 95       	ret

00000722 <__fp_nan>:
 722:	9f ef       	ldi	r25, 0xFF	; 255
 724:	80 ec       	ldi	r24, 0xC0	; 192
 726:	08 95       	ret

00000728 <__fp_pscA>:
 728:	00 24       	eor	r0, r0
 72a:	0a 94       	dec	r0
 72c:	16 16       	cp	r1, r22
 72e:	17 06       	cpc	r1, r23
 730:	18 06       	cpc	r1, r24
 732:	09 06       	cpc	r0, r25
 734:	08 95       	ret

00000736 <__fp_pscB>:
 736:	00 24       	eor	r0, r0
 738:	0a 94       	dec	r0
 73a:	12 16       	cp	r1, r18
 73c:	13 06       	cpc	r1, r19
 73e:	14 06       	cpc	r1, r20
 740:	05 06       	cpc	r0, r21
 742:	08 95       	ret

00000744 <__fp_round>:
 744:	09 2e       	mov	r0, r25
 746:	03 94       	inc	r0
 748:	00 0c       	add	r0, r0
 74a:	11 f4       	brne	.+4      	; 0x750 <__fp_round+0xc>
 74c:	88 23       	and	r24, r24
 74e:	52 f0       	brmi	.+20     	; 0x764 <__fp_round+0x20>
 750:	bb 0f       	add	r27, r27
 752:	40 f4       	brcc	.+16     	; 0x764 <__fp_round+0x20>
 754:	bf 2b       	or	r27, r31
 756:	11 f4       	brne	.+4      	; 0x75c <__fp_round+0x18>
 758:	60 ff       	sbrs	r22, 0
 75a:	04 c0       	rjmp	.+8      	; 0x764 <__fp_round+0x20>
 75c:	6f 5f       	subi	r22, 0xFF	; 255
 75e:	7f 4f       	sbci	r23, 0xFF	; 255
 760:	8f 4f       	sbci	r24, 0xFF	; 255
 762:	9f 4f       	sbci	r25, 0xFF	; 255
 764:	08 95       	ret

00000766 <_exit>:
 766:	f8 94       	cli

00000768 <__stop_program>:
 768:	ff cf       	rjmp	.-2      	; 0x768 <__stop_program>
